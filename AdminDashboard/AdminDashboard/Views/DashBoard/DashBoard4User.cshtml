@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc
@using DSELN.Cmm.Utils
@using Newtonsoft.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    string SESSION_USER_ID =  HttpContextAccessor.HttpContext.Session.GetString(Const.SESSION_USER_ID) as string ?? string.Empty;
    string SESSION_USER_NM =  HttpContextAccessor.HttpContext.Session.GetString(Const.SESSION_USER_NM) as string ?? string.Empty;
    string SESSION_USER_ROLE =  HttpContextAccessor.HttpContext.Session.GetString(Const.SESSION_USER_ROLE) as string ?? string.Empty;
    string SESSION_USER_DEPT_CD =  HttpContextAccessor.HttpContext.Session.GetString(Const.SESSION_USER_DEPT_CD) as string ?? string.Empty;
    string SESSION_USER_POSITION_CD =  HttpContextAccessor.HttpContext.Session.GetString(Const.SESSION_USER_POSITION_CD) as string ?? string.Empty;

    string USER_ID = ViewData["USER_ID"] as string ?? string.Empty;
    string USER_NAME = ViewData["USER_NAME"] as string ?? string.Empty;
    string TEAM_CODE = ViewData["TEAM_CODE"] as string ?? string.Empty;

    string DASHBOARD_ADMIN = "N";
    // 관리자, 소장, 팀장 : 대시보드(관리자) 
    if (Role.ADMIN.Equals(SESSION_USER_ROLE) || Position.DIRECTOR.Equals(SESSION_USER_POSITION_CD) || Position.TEAM_LEADER.Equals(SESSION_USER_POSITION_CD))
    {
        DASHBOARD_ADMIN = "Y";
    }
}

<!-- **********************************************************************  -->
<!-- *****************************  html body *****************************  -->
<!-- **********************************************************************  -->

      <!-- 내용 -->
      <!-- Content Wrapper. Contains page content -->
      <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header"> 
 
	        <div id="pageHeadDiv" >
                    <table>
                              <tbody>
                                         <tr>
                                                <td class="page-title">
                                                        <h2 id="ph">연구원 DASHBOARD</h2>
                                                        <h3 id="sph"></h3>
                                                </td>
                                         </tr>
                              </tbody>
                   </table>
	        </div>
        </section>
        
        <!-- Main content -->
        <section class="content">
   

         <div class="row">
           <!-- 내용 -->
           <div class="col-xs-12">
            
		              <!-- table 하나 -->
		              <div id="box" class="box">
 
			                <div id="parent" class="box-body">
                                    
			    			</div>
		    		</div><!-- box -->
		       </div><!-- col-xs-12 -->
		     </div><!-- row -->
		     
	         <div class="row">
	           <!-- 내용 -->
	           <div class="col-xs-12">
	                  <form id="formCond" name="formCond"  method="post" >
                                <div id="condition" class="condition" > 
									<table border="0" summary="조회조건" width="100%">
										<col style="width:100%" />	
										<tbody>
											<tr>  <!-- 2행  -->
				 								<td>
                                                     <div id="period" align="left">
													    <button id="btn1Month" type="button" class="search" _month="1" onclick="fnPeriodClick(this)">1개월</button>
													    <button id="btn3Month" type="button" class="search" _month="3" onclick="fnPeriodClick(this)">3개월</button>
													    <button id="btn6Month" type="button" class="search" _month="6" onclick="fnPeriodClick(this)">6개월</button>
													    <button id="btn12Month" type="button" class="search" _month="12" onclick="fnPeriodClick(this)">12개월</button>
                                                        <input id="PERIOD" name="PERIOD" value="12"  _data-input-type="textbox" hidden />

                                                        <label for="USER_ID_Q" style="width:120px; text-align:right; margin-right:8px;" >작성자</label>
                                                        @if("N".Equals(DASHBOARD_ADMIN))
                                                        {
                                                            <input id="USER_NAME_Q" name="USER_NAME" _data-input-type="textbox" _data-code-ds=""  style="width:240px;"  readonly value="@(string.IsNullOrEmpty(USER_NAME) ?  SESSION_USER_NM : USER_NAME)" />
                                                            <input id="USER_ID_Q" name="USER_ID" required _data-input-type="textbox" _data-code-ds=""  style="width:240px;"  readonly hidden value="@(string.IsNullOrEmpty(USER_ID) ?  SESSION_USER_ID : USER_ID)" />
                                                        }
                                                        else
                                                        {
                                                            <input id="USER_ID_Q" name="USER_ID" required _data-input-type="mccombobox" _data-code-ds=""  _defaultvalue="" style="width:240px;"   @("N".Equals(DASHBOARD_ADMIN) ? "readonly" : "")  value="@(string.IsNullOrEmpty(USER_ID) ?  SESSION_USER_ID : USER_ID)" />
                                                        }

                                                        <label for="TEAM_CODE_Q" style="width:120px; text-align:right; margin-right:8px;" >팀</label>
                                                        <input id="TEAM_CODE_Q" name="TEAM_CODE" _data-input-type="combobox" _data-code-ds="DASHBOARD_TEAM_CODE"  _defaultvalue="" style="width:240px;"/>


@*                                                        <label for="BU_CODE_Q" style="width:120px; text-align:right; margin-right:8px;" >BU</label>
                                                        <input id="BU_CODE_Q" name="BU_CODE" _data-input-type="combobox" _data-code-ds="BU_CODE"  _defaultvalue="" style="width:240px;"/>*@

                                                     </div>
				 								</td>
											</tr>
										</tbody>
									</table>   
                 
                            </div>
                      </form>
			              <!-- table 하나 -->
			              <div id="box" class="box">
	 
				                <div id="parent" class="box-body">
	                                
                                    <div id="splitter1">
                                        <div id="leftPane">
                                            <div id="splitter22">
                                                <div id="topPane22">
                                                    <div id="noteChartMW"></div>
                                                </div>
                                                <div id="bottomPane22">
                                                    <div id="templateChartMW"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="rightPane">
                                            <div id="splitter23">
                                                <div id="topPane23">
                                                    <div id="gridNote"></div>
                                                </div>
                                                <div id="bottomPane23">
                                                    <div id="gridTemplate"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- splitter -->
                                    </div>

				    			</div>
			    			
			    		</div><!-- box -->

		       </div><!-- col-xs-12 -->
		     </div><!-- row -->
		     
        </section>    
        
      </div>

<!-- ************************************************************************************************ -->
<!-- ********************************      start of javascript            ****************************************** -->
<!-- ************************************************************************************************ -->

<script>
    /***********************************************************************
    // document ready 
    ***********************************************************************/
    // 0000. 전역변수 
    var _dsCodeList = null;          // 공통코드 dataSource
    var _vmCond   = null;            // 조회조건 view model (kendo.observable)
    var _dsNote = null; 
    var _dsTemplate = null; 
    var _baseUnit = "months";
    var _page_load = false;  

    // document ready 
    $(document).ready(function () {
         // 1010. form 초기화 
        fnSetForm(); 

        // 2010. grid & dataSource 초기화 
        fnSetGrid(); 
 
        // 3010. view & search 
        _page_load = true; 
        TR.search("Q");
 
    });

    // from 초기화 
    function fnSetForm(svid){
        // 1010. 코드 담기 : Controller ==> ViewBag.CodeList ==>  _dsCodeList  ==> select, radio 등 개별 datasource 에 적용 
        KendoUtils.setCodeList('@Html.Raw(Json.Serialize(ViewBag.CodeList))');  
 
        // 2010. 기본 컴포넌트 생성 (input --> kendo component ) / form tag & name attr required 
        _vmCond = KendoUtils.setInputKendo("formCond", "_vmCond"); 

        // 2020. 작성자/Team 설정 
        fnSetBUTeamCombo(); 

        // 3010. 공통으로 처리되지 않는 UI OR 기본컴포넌트 생성외 추가설정  
        fnOtherKendoUI();  

        // 4010. 버튼 css
        fnSetButtonCss("btn12Month");

        // 5010. splitter bar hide 
        //$(".k-splitbar").hide();
    }
 
    // grid & dataSource 초기화 
    function fnSetGrid(){
        // 1010. grid 
        // 10. 연구노트 
        $("#gridNote").kendoGrid({
            dataSource: _dsNote,
            height: 550,   
            toolbar: [
                {template: '<span id="note_label" class="blacktext">▶ 연구노트 List</span>'}
            ],
            columns: [
                {field : 'EXPERIMENTNUMBER', title:'연구노트번호', width:'60px', attributes: {style: "text-align: center;"}, model: { type: "string", editable: false, }, 
                  //template: "<a href='javascript:void(0)' onclick=\"fnGoExpNote(\'#=EXPERIMENTNUMBER#\')\">#=EXPERIMENTNUMBER#</a>",
                },
                {field : 'PROJECT_NAME', title:'과제명', width:'120px', attributes: {style: "text-align: left;"}, hidden:false, model: { type: "string", editable: false, }, },
                {field : 'TITLE', title:'실험제목', width:'100px', attributes: {style: "text-align: left;"}, hidden:false, model: { type: "string", editable: false, },},
                {field : 'BU_CODE', title:'BU_CODE', width:'60px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, }, },
                {field : 'BU_NAME', title:'BU명', width:'60px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, }, },
                {field : 'DEPTCODE', title:'DEPTCODE', width:'60px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, }, },
                {field : 'DEPTNAME', title:'팀명', width:'60px', attributes: {style: "text-align: center;"}, hidden:false, model: { type: "string", editable: false, }, },
                {field : 'USER_NAME', title:'사용자명', width:'50px', attributes: {style: "text-align: center;"}, hidden:false, model: { type: "string", editable: false, },
                  //template: "<a href='javascript:void(0)' onclick=\"fnGoUserDashBoard(\'#=USER_ID#\')\">#=USER_NAME#</a>",
                },
                {field : 'CREATED', title:'생성일', width:'50px', attributes: {style: "text-align: center;"}, hidden:false, model: { type: "string", editable: false, },},
                {field : 'DATE4CHART', title:'DATE4CHART', width:'50px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, },},
                {field : 'USER_ID', title:'USER_ID', width:'50px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, },},
            ],
			_rowNumCol: false,   // row number column display 
			_checkCol: false,       // check column display 
	        editable: false, sortable: true, scrollable: true, mobile: true, resizable: true, reorderable: true, navigatable: true,
            selectable: "multiple row",    //selectable: "multiple cell","multiple row","cell","row",
            pageable:  false, 
            serverPaging: true,  // --> datasource serverPaging 
            page: function(e) {

            }, 
			change: function(e) {  // 그리드 셀 선택시 

			},
	        edit: function(e) {//Fired when the user edits or creates a data item

            },
            dataBound: function(e) { // moved in KendoUtils 
                KendoUtils.dataBoundPost(e); 
            },
        });

        // 20. 템플릿  
        $("#gridTemplate").kendoGrid({
            dataSource: _dsTemplate,
            height: 550,   
            toolbar: [
                {template: '<span id="template_label" class="blacktext">▶ 템플릿 List</span>'}
            ],
            columns: [
                {field : 'ANAL_NAME', title:'템플릿명', width:'120px', attributes: {style: "text-align: left;"}, hidden:false, model: { type: "string", editable: false, },
                  //template: "<a href='javascript:void(0)' onclick=\"fnGoAnalysis(\'#=ANAL_ID#\')\">#=ANAL_NAME#</a>",
                },
                {field : 'ANAL_ID', title:'분석ID', width:'60px', attributes: {style: "text-align: left;"}, hidden:true, model: { type: "string", editable: false, },},
                {field : 'EXPERIMENTNUMBER', title:'연구노트번호', width:'60px', attributes: {style: "text-align: center;"}, model: { type: "string", editable: false, }, 
                  //template: "<a href='javascript:void(0)' onclick=\"fnGoExpNote(\'#=EXPERIMENTNUMBER#\')\">#=EXPERIMENTNUMBER#</a>",
                },
                {field : 'TITLE', title:'실험제목', width:'100px', attributes: {style: "text-align: left;"}, hidden:false, model: { type: "string", editable: false, },},
                {field : 'BU_CODE', title:'BU_CODE', width:'60px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, }, },
                {field : 'BU_NAME', title:'BU명', width:'60px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, }, },
                {field : 'DEPTCODE', title:'DEPTCODE', width:'60px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, }, },
                {field : 'DEPTNAME', title:'팀명', width:'60px', attributes: {style: "text-align: center;"}, hidden:false, model: { type: "string", editable: false, }, },
                {field : 'USER_NAME', title:'사용자명', width:'50px', attributes: {style: "text-align: center;"}, hidden:false, model: { type: "string", editable: false, },
                  //template: "<a href='javascript:void(0)' onclick=\"fnGoUserDashBoard(\'#=USER_ID#\')\">#=USER_NAME#</a>",
                },
                {field : 'CREATED', title:'생성일', width:'50px', attributes: {style: "text-align: center;"}, hidden:false, model: { type: "string", editable: false, },},
                {field : 'DATE4CHART', title:'DATE4CHART', width:'50px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, },},
                {field : 'USER_ID', title:'USER_ID', width:'50px', attributes: {style: "text-align: center;"}, hidden:true, model: { type: "string", editable: false, },},
            ],
			_rowNumCol: false,   // row number column display 
			_checkCol: false,       // check column display 
	        editable: false, sortable: true, scrollable: true, mobile: true, resizable: true, reorderable: true, navigatable: true,
            selectable: "multiple row",    //selectable: "multiple cell","multiple row","cell","row",
            pageable:  false, 
            serverPaging: true,  // --> datasource serverPaging 
            page: function(e) {

            }, 
			change: function(e) {  // 그리드 셀 선택시 

			},
	        edit: function(e) {//Fired when the user edits or creates a data item

            },
            dataBound: function(e) { // moved in KendoUtils 
                KendoUtils.dataBoundPost(e); 
            },
        });

        // 2010. Grid  columns --> datasource schema fields  
        _dsNote = KendoUtils.setGrid2DataSource("gridNote", "EXPERIMENTNUMBER", _dsNote);   
        _dsTemplate = KendoUtils.setGrid2DataSource("gridTemplate", "ANAL_ID", _dsTemplate);  

        // 3010. Kendo Grid 완성  
        KendoUtils.gridComplete();

        // 4010. resize
        fnResize();
    }
    
    /***********************************************************************
    // event 처리 
    ***********************************************************************/
    $("#btnSearch").click(function() { // 조회 클릭 
        TR.search("Q"); 
    });

    // Trans  
    var TR = {
        // search  
        search : function(svid, pageindex){  
            if(isnull(svid, "") == "") svid = "Q";
 
            if(_dsNote != undefined){
                _dsNote.filter({});  // 필터해제 
                _dsTemplate.filter({});  // 필터해제 
            }
 
            var params = {
                url           : "/DashBoard/GetDashBoard4User",
                data         : "formCond",    
                resultBind : {result0: "gridNote", result1: "gridTemplate"},  
                pageindex : isnull(pageindex, 1),
                funcVar     : this, 
                svid          : svid, 
            };

            KendoAjaxTran.search(params); 
        },

        // tranaction post 
        apply_post : function (svid, data){
            if(svid == "Q"){  
                var count = numberWithCommas(data.result0.length); 
                fnSetLabel("note_label", count, false);

                var count = numberWithCommas(data.result1.length); 
                fnSetLabel("template_label", count, false);

                // chart 
                createChart(data, _baseUnit);
            }
        },
    }; 

    // 작성자 / Team 설정 
    function fnSetBUTeamCombo(){
        // 롤, 포지션에 따른 설정 
        var combobox = $("#TEAM_CODE_Q").data("kendoComboBox"); 
        var teamCode = "@SESSION_USER_DEPT_CD";  // 세션사용자 팀(부서)

        // 관리자 --> 연구자 대시보드로 넘어온 경우 
        if(isnull("@TEAM_CODE", "") > ""){
            teamCode = "@TEAM_CODE"; 
        }
        
        ////KendoUtils.set("TEAM_CODE_Q", teamCode);
        combobox.value(teamCode); 

        if("@SESSION_USER_ROLE" == "ADMIN"){
            combobox.readonly(false);  
        }else if("@SESSION_USER_POSITION_CD" == "@Position.DIRECTOR"){  // 직위==소장 
            combobox.readonly(false);  
        }else if("@SESSION_USER_POSITION_CD" == "@Position.TEAM_LEADER"){  // 직위==팀장 
            combobox.readonly(true);  
        }else{
            combobox.readonly(true); 
        }
    };

    // USER change 
    function USER_ID_Q_onChange(e){
        var userId = isnull(KendoUtils.get("USER_ID_Q"), ""); 
        if(userId == ""){
            // dummy 
        }else{
            TR.search();
        }

    };

    // TEAM change 
    function TEAM_CODE_Q_onChange(e){
        fnSetMultiColumnCombo("USER_ID_Q");

        // 작성자 clear 
        KendoUtils.set("USER_ID_Q", "");
    };

    // button click 
    function fnPeriodClick(e){
        fnSetButtonCss($(e).attr("id"));
        var month = $(e).attr("_month");
        $("#PERIOD").val(month);

        if(month == 1){
            _baseUnit = "weeks";
        }else{
            _baseUnit = "months";
        }

        TR.search();
    }

    // chart 
    function createChart(data, baseUnit) {
        var noteData = data.result0;   // chart data
        var format = (baseUnit == "weeks" ? "M.d" : "yy.M");
        var deptCode = []; 
        var color = DashBoardChart.color;

        // 10. note monthly/weekly chart 
        var series = []; 
        var idx = 0; 
        var summary = []; 
        $(noteData).each(function (index, item) {
            if(!summary[item.PROJECT_NAME]){
                summary[item.PROJECT_NAME] = 1;
            }
            else{
                summary[item.PROJECT_NAME] ++;
            }  
        });

        // 과제별 series 
        for (var prop in summary) {
            var json = {
                    category: prop ,
                    value: summary[prop],
                    color: color[idx++],
                };
            series.push(json);
        }

        DashBoardChart.createPieChart("noteChartMW", "연구원 과제별 연구노트", series); 

        // template data 
        var templData = data.result1;   // chart data
        var teamAgg = []; 
        var teamCode = []; 
        // chart data  
        $(templData).each(function (index, item) {
            var date = new Date(item.DATE4CHART); 
            item.DATE = date;
            item.value = 1;

            // chart 1 ==> [AA{}, BB{}, CC{}]
            if (teamAgg["D" + item.DEPTCODE] == undefined) {
                teamAgg["D" + item.DEPTCODE] = {CNT:1, DEPTCODE:item.DEPTCODE, DEPTNAME:item.DEPTNAME,}; 
            }else{
                teamAgg["D" + item.DEPTCODE].CNT = teamAgg["D" + item.DEPTCODE].CNT + 1; 
            }

            item["D" + item.DEPTCODE] = 1;  // for count 
        });

        var obj = Object.keys(teamAgg);
        for (key in Object.keys(obj)) {  // [AA{}, BB{}, CC{}] --> [{}, {}, {}]
            var field = obj[key];
            var item = teamAgg[field];
            teamCode.push(item);
        }

        // 오름차순 
        teamCode.sort(function (a, b) {
            return(a["DEPTNAME"] > b["DEPTNAME"]) ? 1 : ((a["DEPTNAME"] < b["DEPTNAME"]) ? -1 : 0);
        });

        // 20. template monthly/weekly chart 
        var series = []; 
        var idx = 0; 
        $.each(teamCode, function (key, item) {
            var json = {                 
                type: "column",
                name: item.DEPTNAME,
                aggregate: "sum",
                field: "D" + item.DEPTCODE,   // for count 
                categoryField: "DATE",
                color: color[idx++],
            };
            series.push(json); 
        });

        DashBoardChart.createBarChart4BaseUnit("templateChartMW", templData, baseUnit, "연구원 월별(주별) 분석템플릿 현황 [건수]", series, format); 
    };
 
    // chart series click event 1
    function noteChartMW_seriesClick(e){
        var project = isnull(e.category, "");

        if(isnull(project, "") > ""){  ;
            _dsNote.filter(
                {
                    logic: "and",
                    filters: [
                        { field: "PROJECT_NAME", operator: "eq", value: project},
                    ]
                }
            ); 
        }else{
            _dsNote.filter({}); 
        }

        var count = numberWithCommas(_dsNote._view.length); 
        fnSetLabel("note_label", count, true);
    };
    
    // chart series click event 2
    function templateChartMW_seriesClick(e){
        var date = new Date();
        var dateStr = new Date(e.category.getTime() - (date.getTimezoneOffset() * 60000)).toISOString().slice(0,10);
        var dateStr2 = dateStr;
        var baseUnit = _baseUnit;
        var deptName = isnull(e.series.name, "");

        if(baseUnit == "months"){
            dateStr = dateStr.slice(0, 7);
        }else if(baseUnit == "weeks") {
            dateStr2 = new Date(addDays(dateStr, 6).getTime() - (date.getTimezoneOffset() * 60000)).toISOString().slice(0,10);  
        }
 
        if(deptName > "" && baseUnit == "months"){  
            _dsTemplate.filter(
                {
                    logic: "and",
                    filters: [
                        { field: "DEPTNAME", operator: "startswith", value: deptName},
                        { field: "DATE4CHART", operator: "startswith", value: dateStr},
                    ]
                }
            ); 
        }else if(deptName > "" && baseUnit == "weeks"){  

            _dsTemplate.filter(
                {
                    logic: "and",
                    filters: [
                        { field: "DEPTNAME", operator: "startswith", value: deptName},
                        { field: "DATE4CHART", operator: "gte", value: dateStr},
                        { field: "DATE4CHART", operator: "lte", value: dateStr2},
                    ]
                }
            ); 
        }else{
            _dsTemplate.filter({}); 
        }

        var count = numberWithCommas(_dsTemplate._view.length); 
        fnSetLabel("template_label", count, true);
    };

    // chart toolbar lable 
    function fnSetLabel(id, count, isfilter){
        if(isfilter){
            $("#" + id).addClass("bluetext");
            $("#" + id).removeClass("blacktext");
        }else{
            $("#" + id).addClass("blacktext");
            $("#" + id).removeClass("bluetext");
        }

        if(id == "note_label") $("#note_label").text('▶ 연구노트 List ( ' + count + ' 건 )'); 
        if(id == "template_label") $("#template_label").text('▶ 템플릿 List ( ' + count + ' 건 )'); 
    };
    
    // button class 
    function fnSetButtonCss(activeBtnId){
        // KendoUtils.js 에서 kendo button 생성시 class를 재조정하므로 ... 공통 처리후 다시 설정 
        $("#period button").each(function (index, item) {
            $(item).removeClass("k-button-solid-primary"); 
            $(item).addClass("dashboard-button-off");
        });

        // 활성화 버튼설정
        $("#" + activeBtnId).addClass("k-button-solid-primary"); 
        $("#" + activeBtnId).removeClass("dashboard-button-off");
    };

    /*************************************************************************/
	// Other Kendo UI 
	/*************************************************************************/
    function fnOtherKendoUI(){ // Other Kendo UI 
        // mc combo columns 
        if('@DASHBOARD_ADMIN' == "Y"){
            fnSetMultiColumnCombo("USER_ID_Q");
        }
    };
 
    function fnSetMultiColumnCombo(id){  // kendoMultiColumnComboBox 추가설정 
        //multi column combo 추가 설정 
        if(id == "USER_ID_Q"){
            var teamCode = isnull(KendoUtils.get("TEAM_CODE_Q"), ""); 

            var mcCombo = $("#" + id).data("kendoMultiColumnComboBox");
            var options = mcCombo.options;
            options.dataTextField =  "USER_NM" ;
            options.dataValueField = "USER_ID" ;
            options.autoBind = true;

            var columns = [
                                    { field: "USER_NM", title: "성명", width: 100},
                                    { field: "USER_ID", title: "사번", width: 100},
                                    { field: "DEPTNAME", title: "부서", width: 100 },
                                    { field: "POSITION", title: "직위", width: 100 },
                                    { field: "TEL", title: "전화번호", width: 140},
                                    ];
            options.columns = columns;

            options.dataSource =  {  
                                                type: "json", 
                                                transport: { read: "/Common/GetCodeHelp?ID=USER&SUB_ID=DASHBOARD_USER&PARAM1=" + isnull(teamCode, "")  },
                                             };  // when not remote

            mcCombo.setOptions(options); 

            mcCombo.dataSource.read();  // 10. read   // when not remote
            mcCombo.setDataSource(options.dataSource); // 20. setDataSource  // when not remote
        }
    };

    /*************************************************************************/
	// splitter 설정 
	/*************************************************************************/
    $("#splitter1").kendoSplitter({ // splitter 설정
        orientation: "horizontal",
        height: "800px",
        panes: [
            {
                resizable: false,
                collapsible: false,
                size: "50%" 
            }, 
            {
                resizable: false,
                collapsible: false
            }
        ]
    });

	$("#splitter22").kendoSplitter({ //splitter 설정 
		orientation: "vertical",
		panes: [
                { resizable : false, collapsible: false, size: "50%" },
                { resizable : false, collapsible: false }
            ],
	});

	$("#splitter23").kendoSplitter({ //splitter 설정 
		orientation: "vertical",
		panes: [
                { resizable : false, collapsible: false, size: "50%" },
                { resizable : false, collapsible: false }
            ],
	});

	/*************************************************************************/
	// layout resizing..
	/************************************************************************/
      $(window).resize(function(){
          fnResize();
      });

	function fnResize(){ 
		//KendoUtils.resizeOneGrid("splitter1", ""); 

        var cwH = $(".content-wrapper").height();
        var chH = $("#pageHeadDiv").height();
        var footH = isnull($(".border-top.footer.text-muted").height(), 0);
        var form1H = isnull($("#" + "formCond").height(), 0);

        // 10. splitter 
        var splitter1 = $("#splitter1").data("kendoSplitter");
        var splitter1H = cwH - form1H - chH - footH - KendoUtils.topHeadH - KendoUtils.footerH;

        splitter1.wrapper.height(splitter1H);
        splitter1.resize();

        // var splitter21 = $("#splitter21").data("kendoSplitter");
        //splitter21.wrapper.height(splitter1H);
        //splitter21.resize();

         var splitter22 = $("#splitter22").data("kendoSplitter");
        splitter22.wrapper.height(splitter1H);
        splitter22.resize();

         var splitter23 = $("#splitter23").data("kendoSplitter");
        splitter23.wrapper.height(splitter1H);
        splitter23.resize();

        // 20. grid 
        $("#gridNote").height($("#topPane23").height() - 4);
        var dataArea = $("#gridNote").find(".k-grid-content");
        $(dataArea).height( $("#topPane23").height() - 64);

        $("#gridTemplate").height($("#bottomPane23").height() - 4);
        var dataArea = $("#gridTemplate").find(".k-grid-content");
        $(dataArea).height( $("#bottomPane23").height() - 64);

        // 30. chart 
        //$("#noteChartAll").height($("#topPane21").height() - 4);
        //$("#templateChartAll").height($("#bottomPane21").height() - 4);

        $("#noteChartMW").height($("#topPane22").height() - 4);
        $("#templateChartMW").height($("#bottomPane22").height() - 4);

	}

</script>