@using DSELN.Models
@using Microsoft.AspNetCore.Html
@using DSELN.Cmm.Utils
@model ErrorViewModel

@{
    ViewData["Title"] = "Error";
    string errorMsg = (ViewData["_msg"] as string ?? string.Empty); //.Replace("%0D", "\r");  \
    string loginYn = (bool) ViewData["_isLogin"] ? "Y" : "N";
}

<script>
    //var msg = "@errorMsg".replace(/&#xD;/gi, "\r");
    var msg = "@errorMsg";
    alert("[Error]"  + "\r" + (msg)  + "\r" + "이전 페이지로 이동합니다.");

    if("@loginYn" == "Y") // 로그인시 모델유효성 검사에서 넘어 올경우 여기서 로그인페이지로 이동시킴 
    {
        location.href="/Login/Login"  // 페이지 이동...
    }
    else
    {
        history.back();
    }
 
</script>

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>
<h2 class="text-danger">@(new HtmlString(@errorMsg.Replace("\r", "<br/>")))  </h2>

@*@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>*@
